import{S as d,i as n}from"./assets/vendor-5ObWk2rO.js";(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();const m="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%3e%3cg%20fill='%23FAFAFB'%20clip-path='url(%23a)'%3e%3cpath%20d='M6.81.219A.75.75%200%200%201%207.34%200h9.32a.75.75%200%200%201%20.53.219l6.591%206.591a.75.75%200%200%201%20.219.53v9.32a.75.75%200%200%201-.219.53l-6.591%206.591a.75.75%200%200%201-.53.219H7.34a.75.75%200%200%201-.53-.219L.219%2017.19A.75.75%200%200%201%200%2016.66V7.34a.75.75%200%200%201%20.219-.53L6.81.219ZM7.65%201.5%201.5%207.65v8.7l6.15%206.15h8.7l6.15-6.15v-8.7L16.35%201.5h-8.7Z'/%3e%3cpath%20d='M6.969%206.97a.75.75%200%200%201%201.062%200L12%2010.94l3.969-3.97a.75.75%200%201%201%201.062%201.061l-3.97%203.97%203.97%203.968a.753.753%200%200%201%200%201.062.749.749%200%200%201-1.062%200L12%2013.061l-3.969%203.97a.75.75%200%200%201-1.225-.243.751.751%200%200%201%20.163-.819L10.939%2012%206.97%208.031a.75.75%200%200%201%200-1.062Z'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='a'%3e%3cpath%20fill='%23fff'%20d='M0%200h24v24H0z'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e";function g(s){const a=new URLSearchParams({key:"46785976-efe48924e46a3ec0e24bd3bdc",q:s,image_type:"photo",orientation:"horizontal",safesearch:!0});return fetch(`https://pixabay.com/api/?${a}`).then(t=>{if(!t.ok)throw new Error(t.status);return t.json()}).then(t=>{if(t.total===0)throw new Error("Sorry, there are no images matching your search query. Please try again!");return t})}function y(s,a){const t=s.map(({largeImageURL:i,webformatURL:e,tags:r,likes:o,views:h,comments:p,downloads:f})=>`
        <li class="gallery-item">
          <a href=${i} class="gallery-ref">
            <img class="gallery-img" src=${e} alt="${r}" title=""/>
          </a>
            <ul class="gallery-descrip">
          <li><b>likes</b><span>${o}</span></li>
          <li><b>views</b><span>${h}</span></li>
          <li><b>comments</b><span>${p}</span></li>
          <li><b>downloads</b><span>${f}</span></li>
             </ul>
        </li>`).join("");a.innerHTML=t}const L=document.querySelector(".search"),l=document.querySelector(".gallery"),c=document.querySelector(".spinner");let b=new d(".gallery a",{captionType:"attr",captionsData:"alt",captionPosition:"bottom"});const u={iconUrl:m,backgroundColor:"red",messageColor:"white",layout:2,closeOnClick:!0,close:!1,position:"center",messageSize:24,timeout:3e3};L.addEventListener("submit",s=>{s.preventDefault();const a=s.currentTarget.elements.searchInput.value.trim();if(!a){n.show({message:"Sorry, you are not enter search parametrs!",...u});return}l.innerHTML="",c.classList.add("loader"),g(a).then(t=>{y(t.hits,l),b.refresh()}).catch(t=>{n.show({message:`${t}`,...u})}).finally(()=>{c.classList.remove("loader")}),s.currentTarget.reset()});
//# sourceMappingURL=index.js.map
